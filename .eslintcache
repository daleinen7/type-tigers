[{"/home/kndshein/Documents/Github Personal/type-tigers/src/index.js":"1","/home/kndshein/Documents/Github Personal/type-tigers/src/pages/App/App.jsx":"2","/home/kndshein/Documents/Github Personal/type-tigers/src/utilities/users-service.js":"3","/home/kndshein/Documents/Github Personal/type-tigers/src/pages/AuthPage/AuthPage.jsx":"4","/home/kndshein/Documents/Github Personal/type-tigers/src/components/NavBar/NavBar.jsx":"5","/home/kndshein/Documents/Github Personal/type-tigers/src/utilities/users-api.js":"6","/home/kndshein/Documents/Github Personal/type-tigers/src/components/SignUpForm/SignUpForm.jsx":"7","/home/kndshein/Documents/Github Personal/type-tigers/src/components/LoginForm/LoginForm.jsx":"8","/home/kndshein/Documents/Github Personal/type-tigers/src/pages/Dashboard/Dashboard.jsx":"9","/home/kndshein/Documents/Github Personal/type-tigers/src/pages/Practice/Practice.jsx":"10","/home/kndshein/Documents/Github Personal/type-tigers/src/pages/Account/AccountPage.jsx":"11","/home/kndshein/Documents/Github Personal/type-tigers/src/pages/Game/index.jsx":"12","/home/kndshein/Documents/Github Personal/type-tigers/src/utilities/kids-api.js":"13","/home/kndshein/Documents/Github Personal/type-tigers/src/utilities/send-request.js":"14","/home/kndshein/Documents/Github Personal/type-tigers/src/components/ErrorWords/index.jsx":"15","/home/kndshein/Documents/Github Personal/type-tigers/src/components/FlashWord/index.jsx":"16","/home/kndshein/Documents/Github Personal/type-tigers/src/components/UserAnswer/index.jsx":"17","/home/kndshein/Documents/Github Personal/type-tigers/src/components/Letters/index.jsx":"18","/home/kndshein/Documents/Github Personal/type-tigers/src/components/Image/index.jsx":"19","/home/kndshein/Documents/Github Personal/type-tigers/src/components/Sentence/index.jsx":"20"},{"size":305,"mtime":1621269820072,"results":"21","hashOfConfig":"22"},{"size":1123,"mtime":1621395262652,"results":"23","hashOfConfig":"22"},{"size":1520,"mtime":1621269820072,"results":"24","hashOfConfig":"22"},{"size":1036,"mtime":1621373024840,"results":"25","hashOfConfig":"22"},{"size":1178,"mtime":1621395262652,"results":"26","hashOfConfig":"22"},{"size":1184,"mtime":1621269820072,"results":"27","hashOfConfig":"22"},{"size":2214,"mtime":1621373024840,"results":"28","hashOfConfig":"22"},{"size":1892,"mtime":1621373024840,"results":"29","hashOfConfig":"22"},{"size":67,"mtime":1621373024840,"results":"30","hashOfConfig":"22"},{"size":102,"mtime":1621373024840,"results":"31","hashOfConfig":"22"},{"size":1419,"mtime":1621373024840,"results":"32","hashOfConfig":"22"},{"size":4152,"mtime":1621395262652,"results":"33","hashOfConfig":"22"},{"size":495,"mtime":1621373024840,"results":"34","hashOfConfig":"22"},{"size":945,"mtime":1621373024840,"results":"35","hashOfConfig":"22"},{"size":703,"mtime":1621395262652,"results":"36","hashOfConfig":"22"},{"size":672,"mtime":1621395262652,"results":"37","hashOfConfig":"22"},{"size":5750,"mtime":1621395262652,"results":"38","hashOfConfig":"22"},{"size":1123,"mtime":1621395262652,"results":"39","hashOfConfig":"22"},{"size":165,"mtime":1621395262652,"results":"40","hashOfConfig":"22"},{"size":304,"mtime":1621395262652,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1wqti7k",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/kndshein/Documents/Github Personal/type-tigers/src/index.js",[],["88","89"],"/home/kndshein/Documents/Github Personal/type-tigers/src/pages/App/App.jsx",["90","91"],"/home/kndshein/Documents/Github Personal/type-tigers/src/utilities/users-service.js",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/pages/AuthPage/AuthPage.jsx",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/components/NavBar/NavBar.jsx",["92"],"import { Link, NavLink } from 'react-router-dom';\nimport * as userService from '../../utilities/users-service';\nimport styled from \"styled-components\";\nconst Button = styled.button`\n  margin: 1vmin;\n  font-family: 'Quicksand';\n  padding: 1vmin;\n  color: var(--white);\n  background-color: #7566E5;\n  font-size: 3vmin;\n  font-weight: bold;\n  text-decoration: none;\n  text-align: center;\n  border: .1vmin solid var(--tan-2);\n  border-radius: 10px;\n  outline: none;\n  cursor: pointer;\n`\nconst Nav = styled.div`\nfont-family: 'Quicksand';\ncolor: white;\nbackground-color: #7566E5;\n`\nexport default function NavBar({ user, setUser }) {\n\n  function handleLogOut() {\n    userService.logOut();\n    setUser(null);\n  }\n\n  return (\n    <nav>\n      <NavLink exact activeStyle={{backgroundColor: 'yellow'}} to=\"/game\">Game</NavLink>\n      &nbsp; | &nbsp;\n      <NavLink exact activeStyle={{backgroundColor: 'yellow'}} to=\"/account\">Account</NavLink>\n      &nbsp; | &nbsp;\n      <span>Welcome, {user.name}</span>\n      &nbsp;&nbsp;<Link to=\"\" onClick={handleLogOut}>Log Out</Link>\n    </nav>\n  );\n}","/home/kndshein/Documents/Github Personal/type-tigers/src/utilities/users-api.js",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/components/SignUpForm/SignUpForm.jsx",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/components/LoginForm/LoginForm.jsx",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/pages/Dashboard/Dashboard.jsx",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/pages/Practice/Practice.jsx",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/pages/Account/AccountPage.jsx",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/pages/Game/index.jsx",["93"],"import { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport update from \"immutability-helper\";\n\nimport FlashWord from \"../../components/FlashWord\";\nimport UserAnswer from \"../../components/UserAnswer\";\nimport ErrorWords from \"../../components/ErrorWords\";\n\nconst StyledDiv = styled.div`\n  background: #ffffff;\n  border-radius: 5px;\n`;\n\nexport default function Game() {\n  const [flashWord, setFlashWord] = useState(\"\");\n  const [errorWords, setErrorWords] = useState([]);\n  const testArr = [\"five\", \"two\", \"three\", \"four\", \"five\"];\n  const [correct, setCorrect] = useState(false);\n  const [arrCount, setArrCount] = useState(0);\n  const arrCounter = useRef(arrCount);\n  const [letterCount, setLetterCount] = useState(0);\n  const [clicked, setClicked] = useState([]);\n  const counter = useRef(letterCount);\n  const [wordTimer, setWordTimer] = useState(false);\n\n  const compareAnswer = (word) => {\n    if (flashWord.toUpperCase() === word.join(\"\")) {\n      setCorrect(true);\n    } else {\n      let error = [];\n      for (let letter in flashWord.split(\"\")) {\n        if (flashWord[letter] === word[letter].toLowerCase()) {\n          error.push([word[letter], true]);\n        } else {\n          error.push([word[letter], false]);\n        }\n      }\n      if (errorWords.length < 4) {\n        setErrorWords(update(errorWords, { $push: [error] }));\n      } else {\n        let array = [...errorWords];\n        array.shift();\n        array.push(error);\n        setErrorWords(array);\n      }\n    }\n  };\n\n  const handleNextWord = () => {\n    const newCounter = arrCount + 1;\n    setArrCount(newCounter);\n    arrCounter.current = newCounter;\n    setFlashWord(testArr[arrCounter.current]);\n    setCorrect(false);\n    setErrorWords([]);\n    setClicked([]);\n    setLetterCount(0);\n    counter.current = 0;\n    setWordTimer(false);\n  };\n\n  useEffect(() => {\n    setFlashWord(testArr[arrCounter.current]);\n  });\n\n  return (\n    <StyledDiv>\n      <h1>Spell the word you see below</h1>\n      {/* <Picture/> */}\n      <FlashWord\n        flashWord={flashWord}\n        setFlashWord={setFlashWord}\n        testArr={testArr}\n        wordTimer={wordTimer}\n        setWordTimer={setWordTimer}\n      />\n      <ErrorWords errorWords={errorWords} />\n      <UserAnswer\n        flashWord={flashWord}\n        compareAnswer={compareAnswer}\n        correct={correct}\n        handleNextWord={handleNextWord}\n        counter={counter}\n        clicked={clicked}\n        setClicked={setClicked}\n        letterCount={letterCount}\n        setLetterCount={setLetterCount}\n      />\n    </StyledDiv>\n  );\n}\n","/home/kndshein/Documents/Github Personal/type-tigers/src/utilities/kids-api.js",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/utilities/send-request.js",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/components/ErrorWords/index.jsx",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/components/FlashWord/index.jsx",["94","95"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst Game = styled.div`\n  color: black;\n  background: white;\n  font-family: \"Quicksand\";\n  font-weight: bold;\n  justify-content: center;\n  padding: 0.7rem;\n  font-size: 36px;\n`;\n\nconst Div = styled.div`\n  font-size: 3rem;\n`;\n\nexport default function FlashWord({ flashWord, wordTimer, setWordTimer }) {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setWordTimer(true);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [flashWord]);\n\n  return (\n    <Game>\n      <Div style={{ visibility: !wordTimer ? \"\" : \"hidden\" }}>{flashWord}</Div>\n    </Game>\n  );\n}\n","/home/kndshein/Documents/Github Personal/type-tigers/src/components/UserAnswer/index.jsx",["96","97","98"],"import { useState, useEffect, useRef } from \"react\";\nimport update from \"immutability-helper\";\nimport styled, { css } from \"styled-components\";\n\nimport Letters from \"../Letters\";\n\nconst Game = styled.div`\n  background: white;\n  font-family: \"Quicksand\";\n  justify-content: center;\n  padding: 0.7rem;\n`;\nconst Button = styled.button`\n  margin: 1vmin;\n  font-family: \"Quicksand\";\n  padding: 1vmin;\n  color: var(--white);\n  background-color: #e6964b;\n  font-size: 3vmin;\n  font-weight: bold;\n  text-decoration: none;\n  text-align: center;\n  border: 0.1vmin solid var(--tan-2);\n  border-radius: 10px;\n  outline: none;\n  cursor: pointer;\n`;\nconst LetterDiv = styled.div`\n  margin: 5px;\n  background: gray;\n  color: white;\n  height: 50px;\n  width: 50px;\n  font-size: 24px;\n  justify-content: center;\n  padding: 0.7rem;\n  border-radius: 5px;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 70px);\n  grid-template-rows: 70px 70px;\n  grid-gap: 15px;\n  justify-content: center;\n  background-color: white;\n`;\n\nconst alphabet = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n];\n\nexport default function Answer({\n  compareAnswer,\n  flashWord,\n  correct,\n  handleNextWord,\n  counter,\n  clicked,\n  setClicked,\n  letterCount,\n  setLetterCount,\n}) {\n  // States and refs\n  const [clickedLetters, setClickedLetters] = useState([]);\n  const [selectableLetters, setSelectableLetter] = useState(null);\n\n  // Generating selectable letters\n  const makeSelectableLetters = (word) => {\n    let generated = word.toUpperCase().split(\"\");\n    for (let i = generated.length; i < 10; i++) {\n      generated.push(alphabet[Math.floor(Math.random() * alphabet.length)]);\n    }\n    shuffleArray(generated);\n    setSelectableLetter(generated);\n  };\n\n  // Helper function for generated selectable letters\n  const shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n\n  // Generating blank letters\n  const makeBlankLetters = (word) => {\n    let blankLetters = [];\n    for (let i = 0; i < word.length; i++) {\n      blankLetters.push(\"\");\n    }\n    setClickedLetters(blankLetters);\n  };\n\n  // Function for selecting letters into blanks\n  const addLetter = (letter, key) => {\n    if (counter.current < flashWord.length) {\n      setClickedLetters(\n        update(clickedLetters, {\n          [counter.current]: { $set: letter },\n        })\n      );\n      setClicked(update(clicked, { $push: [key] }));\n      const newCounter = letterCount + 1;\n      setLetterCount(newCounter);\n      counter.current = newCounter;\n    }\n  };\n\n  // Function for backspace\n  const removeLetter = () => {\n    if (counter.current > 0) {\n      const newCounter = letterCount - 1;\n      setLetterCount(newCounter);\n      counter.current = newCounter;\n      setClickedLetters(\n        update(clickedLetters, {\n          [counter.current]: { $set: \"\" },\n        })\n      );\n      setClicked(update(clicked, { $splice: [[clicked.length - 1, 1]] }));\n    }\n  };\n\n  // Make blank letters and generate selectable letters on load\n  useEffect(() => {\n    makeBlankLetters(flashWord);\n    makeSelectableLetters(flashWord);\n  }, [flashWord]);\n\n  return (\n    <>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        {clickedLetters?.map((letter, index) => {\n          return <LetterDiv key={index}>{letter}</LetterDiv>;\n        })}\n        {correct && <div>✓</div>}\n      </div>\n      {!correct && <button onClick={removeLetter}>Backspace</button>}\n      <Grid>\n        {selectableLetters?.map((letter, index) => {\n          return (\n            <Letters\n              clicked={clicked}\n              key={index}\n              index={index}\n              addLetter={addLetter}\n              letter={letter}\n            />\n          );\n        })}\n      </Grid>\n      {correct ? (\n        <button onClick={handleNextWord}>Next</button>\n      ) : (\n        <button onClick={() => compareAnswer(clickedLetters)}>Submit</button>\n      )}\n    </>\n  );\n}\n","/home/kndshein/Documents/Github Personal/type-tigers/src/components/Letters/index.jsx",["99","100"],"import { React, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Letter = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: \"Quicksand\";\n  font-size: 2rem;\n  padding: 0.2rem;\n  height: 75px;\n  width: 75px;\n  font-weight: bold;\n  border-radius: 10px;\n  border: none;\n  background-color: #4f83ff;\n  box-shadow: 3px 3px 0 #0f45c3;\n  margin: 0;\n`;\n\nexport default function Letters({\n  addLetter,\n  letter,\n  index,\n  clicked,\n  correct,\n}) {\n  const handleClick = (letter, index) => {\n    addLetter(letter, index);\n  };\n\n  return (\n    <>\n      <Letter\n        style={{\n          pointerEvents: clicked.includes(index) || correct ? \"none\" : \"auto\",\n          backgroundColor: clicked.includes(index) || correct ? \"#C9D5F1\" : \"\",\n          boxShadow:\n            clicked.includes(index) || correct\n              ? \"inset -3px 3px 0 #66728F\"\n              : \"\",\n          color: clicked.includes(index) || correct ? \"#66728F\" : \"\",\n        }}\n        onClick={() => handleClick(letter, index)}\n      >\n        {letter}\n      </Letter>\n    </>\n  );\n}\n","/home/kndshein/Documents/Github Personal/type-tigers/src/components/Image/index.jsx",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/components/Sentence/index.jsx",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":7,"column":8,"nodeType":"107","messageId":"108","endLine":7,"endColumn":17},{"ruleId":"105","severity":1,"message":"109","line":8,"column":8,"nodeType":"107","messageId":"108","endLine":8,"endColumn":16},{"ruleId":"105","severity":1,"message":"110","line":4,"column":7,"nodeType":"107","messageId":"108","endLine":4,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":96,"column":3,"nodeType":"107","endLine":96,"endColumn":12,"suggestions":"113"},{"ruleId":"105","severity":1,"message":"114","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"115","line":24,"column":6,"nodeType":"116","endLine":24,"endColumn":17,"suggestions":"117"},{"ruleId":"105","severity":1,"message":"118","line":1,"column":31,"nodeType":"107","messageId":"108","endLine":1,"endColumn":37},{"ruleId":"105","severity":1,"message":"119","line":3,"column":18,"nodeType":"107","messageId":"108","endLine":3,"endColumn":21},{"ruleId":"111","severity":1,"message":"120","line":160,"column":6,"nodeType":"116","endLine":160,"endColumn":17,"suggestions":"121"},{"ruleId":"105","severity":1,"message":"114","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"119","line":2,"column":18,"nodeType":"107","messageId":"108","endLine":2,"endColumn":21},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'Practice' is defined but never used.","'Button' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setFlashWord'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [testLevel] as a second argument to the useEffect Hook.",["124"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'setWordTimer'. Either include it or remove the dependency array. If 'setWordTimer' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["125"],"'useRef' is defined but never used.","'css' is defined but never used.","React Hook useEffect has a missing dependency: 'makeSelectableLetters'. Either include it or remove the dependency array.",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Add dependencies array: [testLevel]",{"range":"133","text":"134"},"Update the dependencies array to be: [flashWord, setWordTimer]",{"range":"135","text":"136"},"Update the dependencies array to be: [flashWord, makeSelectableLetters]",{"range":"137","text":"138"},[3268,3268],", [testLevel]",[536,547],"[flashWord, setWordTimer]",[3439,3450],"[flashWord, makeSelectableLetters]"]