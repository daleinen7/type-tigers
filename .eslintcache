[{"/Users/spideyfandan/ga/hackathon/type-tigers/src/index.js":"1","/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/App/App.jsx":"2","/Users/spideyfandan/ga/hackathon/type-tigers/src/utilities/users-service.js":"3","/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/AuthPage/AuthPage.jsx":"4","/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/Practice/Practice.jsx":"5","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/NavBar/NavBar.jsx":"6","/Users/spideyfandan/ga/hackathon/type-tigers/src/utilities/users-api.js":"7","/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/Game/index.jsx":"8","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/SignUpForm/SignUpForm.jsx":"9","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/LoginForm/LoginForm.jsx":"10","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/FlashWord/index.jsx":"11","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/UserAnswer/index.jsx":"12","/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/Dashboard/Dashboard.jsx":"13","/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/Account/AccountPage.jsx":"14","/Users/spideyfandan/ga/hackathon/type-tigers/src/utilities/kids-api.js":"15","/Users/spideyfandan/ga/hackathon/type-tigers/src/utilities/send-request.js":"16","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/ErrorWords/index.jsx":"17","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/Letters/index.jsx":"18"},{"size":305,"mtime":1621279945826,"results":"19","hashOfConfig":"20"},{"size":1083,"mtime":1621400788689,"results":"21","hashOfConfig":"20"},{"size":1520,"mtime":1621279945828,"results":"22","hashOfConfig":"20"},{"size":1036,"mtime":1621399711418,"results":"23","hashOfConfig":"20"},{"size":102,"mtime":1621372349959,"results":"24","hashOfConfig":"20"},{"size":1248,"mtime":1621400788688,"results":"25","hashOfConfig":"20"},{"size":1184,"mtime":1621279945828,"results":"26","hashOfConfig":"20"},{"size":2602,"mtime":1621400788690,"results":"27","hashOfConfig":"20"},{"size":2214,"mtime":1621372349957,"results":"28","hashOfConfig":"20"},{"size":1892,"mtime":1621372349956,"results":"29","hashOfConfig":"20"},{"size":614,"mtime":1621400788687,"results":"30","hashOfConfig":"20"},{"size":4205,"mtime":1621400788688,"results":"31","hashOfConfig":"20"},{"size":1419,"mtime":1621400788690,"results":"32","hashOfConfig":"20"},{"size":1419,"mtime":1621400788689,"results":"33","hashOfConfig":"20"},{"size":495,"mtime":1621400788690,"results":"34","hashOfConfig":"20"},{"size":945,"mtime":1621400788690,"results":"35","hashOfConfig":"20"},{"size":528,"mtime":1621400788686,"results":"36","hashOfConfig":"20"},{"size":957,"mtime":1621400788687,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mkxomg",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},"/Users/spideyfandan/ga/hackathon/type-tigers/src/index.js",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/App/App.jsx",["79"],"/Users/spideyfandan/ga/hackathon/type-tigers/src/utilities/users-service.js",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/AuthPage/AuthPage.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/Practice/Practice.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/components/NavBar/NavBar.jsx",[],["80","81"],"/Users/spideyfandan/ga/hackathon/type-tigers/src/utilities/users-api.js",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/Game/index.jsx",["82"],"import { useState } from \"react\";\nimport FlashWord from \"../../components/FlashWord\";\nimport UserAnswer from \"../../components/UserAnswer\";\nimport styled from \"styled-components\";\n\nconst StyledDiv = styled.div`\n  background: #FFFFFF;\n  border-radius: 5px;\n`;\n\nexport default function Game() {\n  const [flashWord, setFlashWord] = useState(\"\");\n  const testArr = [\"five\", \"two\", \"three\", \"four\", \"five\"];\n\n  const compareAnswer = (word) => {\n    flashWord.toUpperCase() === word.join(\"\")\n      ? console.log(\"correct\")\n      : console.log(\"incorrect\");\n  };\n\n  return (\n    <StyledDiv>\n      <h1>Spell the word you see below</h1>\n      {/* <Picture/> */}\n      <FlashWord\n        flashWord={flashWord}\n        setFlashWord={setFlashWord}\n        testArr={testArr}\n      />\n      <UserAnswer flashWord={flashWord} compareAnswer={compareAnswer} />\n    </StyledDiv>\n  );\n}\n","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/SignUpForm/SignUpForm.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/components/LoginForm/LoginForm.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/components/FlashWord/index.jsx",["83","84"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nconst Game = styled.div`\n  color: black;\n  background: white;\n  font-family: 'Quicksand';\n  justify-content: center;\n  padding: .7rem;\n  font-size: 36px;\n`;\n\nexport default function FlashWord({ flashWord, setFlashWord, testArr }) {\n  const [wordTimer, setWordTimer] = useState(false);\n\n  useEffect(() => {\n    setFlashWord(testArr[0]);\n    const timer = setTimeout(() => {\n      setWordTimer(true);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <Game>\n      <p style={{ visibility: !wordTimer ? \"\" : \"hidden\" }}>\n        {flashWord}\n      </p>\n    </Game>\n  );\n}\n","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/UserAnswer/index.jsx",["85","86","87","88","89"],"import { useState, useEffect, useRef } from \"react\";\nimport update from \"immutability-helper\";\nimport styled, { css } from \"styled-components\";\nimport chroma from \"chroma-js\";\n\nconst Game = styled.div`\n  \n  background: white;\n  font-family: 'Quicksand';\n  justify-content: center;\n  padding: .7rem;\n`;\nconst Button = styled.button`\n  margin: 1vmin;\n  font-family: 'Quicksand';\n  padding: 1vmin;\n  color: var(--white);\n  background-color: #E6964B;\n  font-size: 3vmin;\n  font-weight: bold;\n  text-decoration: none;\n  text-align: center;\n  border: .1vmin solid var(--tan-2);\n  border-radius: 10px;\n  outline: none;\n  cursor: pointer;\n`\nconst LetterDiv = styled.div`\n  margin: 5px;\n  background: gray;\n  color: white;\n  height: 50px;\n  width: 50px;\n  font-size: 24px;\n  justify-content: center;\n  padding: .7rem;\n  border-radius: 5px;\n`;\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 70px);\n  grid-template-rows: 70px 70px;\n  grid-gap: 15px;\n  justify-content: center;\n  background-color: white;\n`;\nconst Letter = styled.button`\n  \ndisplay: flex;\n  justify-content: center;\n  font-family: 'Quicksand';\n  padding: .2rem;\n  ${({ color = chroma('#63A35B') }) =>\n    css `background-color: ${color};\n  color: white;\n  font-size: 2rem;\n  font-weight: bold;\n  border: 2px dashed; \n  border-color: ${color};\n  border-radius: 10px;\n  background-clip: content-box;\n  `}\n  `;\nconst alphabet = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n];\n\nexport default function Answer({ compareAnswer, flashWord }) {\n  // States and refs\n  const [clickedLetters, setClickedLetters] = useState([]);\n  const [selectableLetters, setSelectableLetter] = useState(null);\n  const [letterCount, setLetterCount] = useState(0);\n  const counter = useRef(letterCount);\n\n  // Generating selectable letters\n  const makeSelectableLetters = (word) => {\n    let generated = word.toUpperCase().split(\"\");\n    for (let i = generated.length; i < 10; i++) {\n      generated.push(alphabet[Math.floor(Math.random() * alphabet.length)]);\n    }\n    shuffleArray(generated);\n    setSelectableLetter(generated);\n  };\n\n  // Helper function for generated selectable letters\n  const shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n\n  // Generating blank letters\n  const makeBlankLetters = (word) => {\n    let blankLetters = [];\n    for (let i = 0; i < word.length; i++) {\n      blankLetters.push(\"\");\n    }\n    setClickedLetters(blankLetters);\n  };\n\n  // Function for selecting letters into blanks\n  const addLetter = (event) => {\n    if (counter.current < flashWord.length) {\n      setClickedLetters(\n        update(clickedLetters, {\n          [counter.current]: { $set: event.target.innerText },\n        })\n      );\n      const newCounter = letterCount + 1;\n      setLetterCount(newCounter);\n      counter.current = newCounter;\n    }\n  };\n\n  // Function for backspace\n  const removeLetter = () => {\n    if (counter.current > 0) {\n      const newCounter = letterCount - 1;\n      setLetterCount(newCounter);\n      counter.current = newCounter;\n      setClickedLetters(\n        update(clickedLetters, {\n          [counter.current]: { $set: \"\" },\n        })\n      );\n    }\n  };\n\n  useEffect(() => {\n    makeBlankLetters(flashWord);\n    makeSelectableLetters(flashWord);\n  }, [flashWord]);\n\n  return (\n    <Game>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        {clickedLetters?.map((letter, index) => {\n          return <LetterDiv key={index}>{letter}</LetterDiv>;\n        })}\n      </div>\n      <Button onClick={removeLetter}>Backspace</Button>\n      <Grid>\n        {selectableLetters?.map((letter, index) => {\n          return (\n            <Letter onClick={addLetter} key={index}>\n              {letter}\n            </Letter>\n          );\n        })}\n      </Grid>\n      <Button onClick={() => compareAnswer(clickedLetters)}>Submit</Button>\n    </Game>\n  );\n}\n","/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/Dashboard/Dashboard.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/Account/AccountPage.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/utilities/kids-api.js",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/utilities/send-request.js",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/components/ErrorWords/index.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/components/Letters/index.jsx",["90"],"import { React, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport chroma from \"chroma-js\";\n\nconst Letter = styled.button`\n  display: flex;\n  justify-content: center;\n  font-family: \"Quicksand\";\n  padding: 0.2rem;\n  ${({ color = chroma(\"#63A35B\") }) =>\n    css`\n      background-color: ${color};\n      font-size: 2rem;\n      font-weight: bold;\n      border: 2px dashed;\n      border-color: ${color};\n      border-radius: 10px;\n      background-clip: content-box;\n    `}\n`;\n\nexport default function Letters({ addLetter, letter, index, clicked }) {\n  const handleClick = (letter, index) => {\n    addLetter(letter, index);\n  };\n\n  return (\n    <>\n      <Letter\n        style={{\n          pointerEvents: clicked.includes(index) ? \"none\" : \"auto\",\n          backgroundColor: clicked.includes(index) ? \"gray\" : \"\",\n        }}\n        onClick={() => handleClick(letter, index)}\n      >\n        {letter}\n      </Letter>\n    </>\n  );\n}\n",{"ruleId":"91","severity":1,"message":"92","line":8,"column":8,"nodeType":"93","messageId":"94","endLine":8,"endColumn":16},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":62,"column":3,"nodeType":"93","endLine":62,"endColumn":12,"suggestions":"101"},{"ruleId":"91","severity":1,"message":"102","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"103","line":18,"column":6,"nodeType":"104","endLine":18,"endColumn":17,"suggestions":"105"},{"ruleId":"91","severity":1,"message":"106","line":1,"column":31,"nodeType":"93","messageId":"94","endLine":1,"endColumn":37},{"ruleId":"91","severity":1,"message":"107","line":3,"column":18,"nodeType":"93","messageId":"94","endLine":3,"endColumn":21},{"ruleId":"91","severity":1,"message":"108","line":7,"column":7,"nodeType":"93","messageId":"94","endLine":7,"endColumn":11},{"ruleId":"91","severity":1,"message":"109","line":13,"column":7,"nodeType":"93","messageId":"94","endLine":13,"endColumn":13},{"ruleId":"99","severity":1,"message":"110","line":154,"column":6,"nodeType":"104","endLine":154,"endColumn":17,"suggestions":"111"},{"ruleId":"91","severity":1,"message":"102","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},"no-unused-vars","'Practice' is defined but never used.","Identifier","unusedVar","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setFlashWord'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [testArr] as a second argument to the useEffect Hook.",["114"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'setWordTimer'. Either include it or remove the dependency array. If 'setWordTimer' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["115"],"'useRef' is defined but never used.","'css' is defined but never used.","'Game' is assigned a value but never used.","'Button' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'makeSelectableLetters'. Either include it or remove the dependency array.",["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Add dependencies array: [testArr]",{"range":"123","text":"124"},"Update the dependencies array to be: [flashWord, setWordTimer]",{"range":"125","text":"126"},"Update the dependencies array to be: [flashWord, makeSelectableLetters]",{"range":"127","text":"128"},[1930,1930],", [testArr]",[466,477],"[flashWord, setWordTimer]",[3363,3374],"[flashWord, makeSelectableLetters]"]