[{"/Users/douglasleinen/code/type-tigers/src/index.js":"1","/Users/douglasleinen/code/type-tigers/src/pages/App/App.jsx":"2","/Users/douglasleinen/code/type-tigers/src/utilities/users-service.js":"3","/Users/douglasleinen/code/type-tigers/src/pages/AuthPage/AuthPage.jsx":"4","/Users/douglasleinen/code/type-tigers/src/pages/Practice/Practice.jsx":"5","/Users/douglasleinen/code/type-tigers/src/components/NavBar/NavBar.jsx":"6","/Users/douglasleinen/code/type-tigers/src/utilities/users-api.js":"7","/Users/douglasleinen/code/type-tigers/src/pages/Game/index.jsx":"8","/Users/douglasleinen/code/type-tigers/src/utilities/kids-api.js":"9","/Users/douglasleinen/code/type-tigers/src/components/SignUpForm/SignUpForm.jsx":"10","/Users/douglasleinen/code/type-tigers/src/components/LoginForm/LoginForm.jsx":"11","/Users/douglasleinen/code/type-tigers/src/utilities/send-request.js":"12","/Users/douglasleinen/code/type-tigers/src/components/UserAnswer/index.jsx":"13","/Users/douglasleinen/code/type-tigers/src/components/FlashWord/index.jsx":"14","/Users/douglasleinen/code/type-tigers/src/components/ErrorWords/index.jsx":"15","/Users/douglasleinen/code/type-tigers/src/components/Letters/index.jsx":"16","/Users/douglasleinen/code/type-tigers/src/components/Image/index.jsx":"17","/Users/douglasleinen/code/type-tigers/src/components/Sentence/index.jsx":"18","/Users/douglasleinen/code/type-tigers/src/pages/Dashboard/Dashboard.jsx":"19","/Users/douglasleinen/code/type-tigers/src/components/SideBar/SideBar.jsx":"20","/Users/douglasleinen/code/type-tigers/src/components/Profile/Profile.jsx":"21"},{"size":305,"mtime":1621266693178,"results":"22","hashOfConfig":"23"},{"size":1392,"mtime":1621449982730,"results":"24","hashOfConfig":"23"},{"size":1520,"mtime":1621266693181,"results":"25","hashOfConfig":"23"},{"size":1036,"mtime":1621361920723,"results":"26","hashOfConfig":"23"},{"size":102,"mtime":1621361920725,"results":"27","hashOfConfig":"23"},{"size":1567,"mtime":1621442445726,"results":"28","hashOfConfig":"23"},{"size":1184,"mtime":1621266693181,"results":"29","hashOfConfig":"23"},{"size":4152,"mtime":1621426583102,"results":"30","hashOfConfig":"23"},{"size":495,"mtime":1621373082736,"results":"31","hashOfConfig":"23"},{"size":2214,"mtime":1621361920720,"results":"32","hashOfConfig":"23"},{"size":1892,"mtime":1621361920720,"results":"33","hashOfConfig":"23"},{"size":945,"mtime":1621373082740,"results":"34","hashOfConfig":"23"},{"size":5750,"mtime":1621426583100,"results":"35","hashOfConfig":"23"},{"size":672,"mtime":1621426583096,"results":"36","hashOfConfig":"23"},{"size":703,"mtime":1621426583095,"results":"37","hashOfConfig":"23"},{"size":1123,"mtime":1621426583097,"results":"38","hashOfConfig":"23"},{"size":165,"mtime":1621426583096,"results":"39","hashOfConfig":"23"},{"size":304,"mtime":1621426583098,"results":"40","hashOfConfig":"23"},{"size":3083,"mtime":1621450007208,"results":"41","hashOfConfig":"23"},{"size":1068,"mtime":1621448175728,"results":"42","hashOfConfig":"23"},{"size":819,"mtime":1621433326922,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1ovfdl0",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/douglasleinen/code/type-tigers/src/index.js",[],["93","94"],"/Users/douglasleinen/code/type-tigers/src/pages/App/App.jsx",["95","96"],"/Users/douglasleinen/code/type-tigers/src/utilities/users-service.js",[],"/Users/douglasleinen/code/type-tigers/src/pages/AuthPage/AuthPage.jsx",[],"/Users/douglasleinen/code/type-tigers/src/pages/Practice/Practice.jsx",[],["97","98"],"/Users/douglasleinen/code/type-tigers/src/components/NavBar/NavBar.jsx",["99"],"import { Link, NavLink } from \"react-router-dom\";\nimport * as userService from \"../../utilities/users-service\";\nimport styled from \"styled-components\";\nconst Button = styled.button`\n  margin: 1vmin;\n  font-family: \"Quicksand\";\n  padding: 1vmin;\n  color: var(--white);\n  background-color: #7566e5;\n  font-size: 3vmin;\n  font-weight: bold;\n  text-decoration: none;\n  text-align: center;\n  border: 0.1vmin solid var(--tan-2);\n  border-radius: 10px;\n  outline: none;\n  cursor: pointer;\n`;\nconst Nav = styled.div`\n  font-family: \"Quicksand\";\n  color: white;\n  background-color: #3370ff;\n`;\nexport default function NavBar({ user, setUser }) {\n  function handleLogOut() {\n    userService.logOut();\n    setUser(null);\n  }\n\n  return (\n    <Nav>\n      <div>Type Tigers</div>\n      <NavLink exact activeStyle={{ backgroundColor: \"yellow\" }} to=\"/game\">\n        Game\n      </NavLink>\n      &nbsp; | &nbsp;\n      <NavLink exact activeStyle={{ backgroundColor: \"yellow\" }} to=\"/account\">\n        Account\n      </NavLink>\n      &nbsp; | &nbsp;\n      <span>Welcome, {user.name}</span>\n      &nbsp;&nbsp;\n      <Link to=\"\" onClick={handleLogOut}>\n        Log Out\n      </Link>\n    </Nav>\n  );\n}\n","/Users/douglasleinen/code/type-tigers/src/utilities/users-api.js",[],"/Users/douglasleinen/code/type-tigers/src/pages/Game/index.jsx",["100"],"import { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport update from \"immutability-helper\";\n\nimport FlashWord from \"../../components/FlashWord\";\nimport UserAnswer from \"../../components/UserAnswer\";\nimport ErrorWords from \"../../components/ErrorWords\";\n\nconst StyledDiv = styled.div`\n  background: #ffffff;\n  border-radius: 5px;\n`;\n\nexport default function Game() {\n  const [flashWord, setFlashWord] = useState(\"\");\n  const [errorWords, setErrorWords] = useState([]);\n  const testArr = [\"five\", \"two\", \"three\", \"four\", \"five\"];\n  const [correct, setCorrect] = useState(false);\n  const [arrCount, setArrCount] = useState(0);\n  const arrCounter = useRef(arrCount);\n  const [letterCount, setLetterCount] = useState(0);\n  const [clicked, setClicked] = useState([]);\n  const counter = useRef(letterCount);\n  const [wordTimer, setWordTimer] = useState(false);\n\n  const compareAnswer = (word) => {\n    if (flashWord.toUpperCase() === word.join(\"\")) {\n      setCorrect(true);\n    } else {\n      let error = [];\n      for (let letter in flashWord.split(\"\")) {\n        if (flashWord[letter] === word[letter].toLowerCase()) {\n          error.push([word[letter], true]);\n        } else {\n          error.push([word[letter], false]);\n        }\n      }\n      if (errorWords.length < 4) {\n        setErrorWords(update(errorWords, { $push: [error] }));\n      } else {\n        let array = [...errorWords];\n        array.shift();\n        array.push(error);\n        setErrorWords(array);\n      }\n    }\n  };\n\n  const handleNextWord = () => {\n    const newCounter = arrCount + 1;\n    setArrCount(newCounter);\n    arrCounter.current = newCounter;\n    setFlashWord(testArr[arrCounter.current]);\n    setCorrect(false);\n    setErrorWords([]);\n    setClicked([]);\n    setLetterCount(0);\n    counter.current = 0;\n    setWordTimer(false);\n  };\n\n  useEffect(() => {\n    setFlashWord(testArr[arrCounter.current]);\n  });\n\n  return (\n    <StyledDiv>\n      <h1>Spell the word you see below</h1>\n      {/* <Picture/> */}\n      <FlashWord\n        flashWord={flashWord}\n        setFlashWord={setFlashWord}\n        testArr={testArr}\n        wordTimer={wordTimer}\n        setWordTimer={setWordTimer}\n      />\n      <ErrorWords errorWords={errorWords} />\n      <UserAnswer\n        flashWord={flashWord}\n        compareAnswer={compareAnswer}\n        correct={correct}\n        handleNextWord={handleNextWord}\n        counter={counter}\n        clicked={clicked}\n        setClicked={setClicked}\n        letterCount={letterCount}\n        setLetterCount={setLetterCount}\n      />\n    </StyledDiv>\n  );\n}\n","/Users/douglasleinen/code/type-tigers/src/utilities/kids-api.js",[],"/Users/douglasleinen/code/type-tigers/src/components/SignUpForm/SignUpForm.jsx",[],"/Users/douglasleinen/code/type-tigers/src/components/LoginForm/LoginForm.jsx",[],"/Users/douglasleinen/code/type-tigers/src/utilities/send-request.js",[],"/Users/douglasleinen/code/type-tigers/src/components/UserAnswer/index.jsx",["101","102","103"],"import { useState, useEffect, useRef } from \"react\";\nimport update from \"immutability-helper\";\nimport styled, { css } from \"styled-components\";\n\nimport Letters from \"../Letters\";\n\nconst LetterDiv = styled.div`\n  display: flex;\n  justify-self: center;\n  align-items: center;\n  margin: 5px 10px 5px 10px;\n  border: 3px solid #4f83ff;\n  color: #4f83ff;\n  height: 75px;\n  width: 75px;\n  font-size: 50px;\n  justify-content: center;\n  padding: 0.7rem;\n  border-radius: 10px;\n`;\n\nconst Grid = styled.div`\n  // display: grid;\n  // grid-template-columns: repeat(5, 80px);\n  // grid-template-rows: 80px 80px;\n  // grid-gap: 15px;\n  display: flex;\n  flex-flow: row wrap;\n  gap: 15px;\n  justify-content: space-between;\n  background-color: white;\n`;\n\nconst alphabet = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n];\n\nconst FlexDiv = styled.div`\n  margin: 0 auto;\n  width: 700px;\n  display: grid;\n  grid-template-columns: 500px 200px;\n  gap: 30px;\n`;\n\nconst Button = styled.button`\n  font-size: 1.5rem;\n  color: white;\n  border: none;\n  background-color: #4f83ff;\n  box-shadow: 3px 3px 0 #0f45c3;\n  height: 75px;\n  width: 150px;\n  padding: 0.5rem;\n  margin: 0;\n  border-radius: 10px;\n`;\n\nexport default function Answer({\n  compareAnswer,\n  flashWord,\n  correct,\n  handleNextWord,\n  counter,\n  clicked,\n  setClicked,\n  letterCount,\n  setLetterCount,\n}) {\n  // States and refs\n  const [clickedLetters, setClickedLetters] = useState([]);\n  const [selectableLetters, setSelectableLetter] = useState(null);\n\n  // Generating selectable letters\n  const makeSelectableLetters = (word) => {\n    let generated = word.toUpperCase().split(\"\");\n    for (let i = generated.length; i < 10; i++) {\n      generated.push(alphabet[Math.floor(Math.random() * alphabet.length)]);\n    }\n    shuffleArray(generated);\n    setSelectableLetter(generated);\n  };\n\n  // Helper function for generated selectable letters\n  const shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n\n  // Generating blank letters\n  const makeBlankLetters = (word) => {\n    let blankLetters = [];\n    for (let i = 0; i < word.length; i++) {\n      blankLetters.push(\"\");\n    }\n    setClickedLetters(blankLetters);\n  };\n\n  // Function for selecting letters into blanks\n  const addLetter = (letter, key) => {\n    if (counter.current < flashWord.length) {\n      setClickedLetters(\n        update(clickedLetters, {\n          [counter.current]: { $set: letter },\n        })\n      );\n      setClicked(update(clicked, { $push: [key] }));\n      const newCounter = letterCount + 1;\n      setLetterCount(newCounter);\n      counter.current = newCounter;\n    }\n  };\n\n  // Function for backspace\n  const removeLetter = () => {\n    if (counter.current > 0) {\n      const newCounter = letterCount - 1;\n      setLetterCount(newCounter);\n      counter.current = newCounter;\n      setClickedLetters(\n        update(clickedLetters, {\n          [counter.current]: { $set: \"\" },\n        })\n      );\n      setClicked(update(clicked, { $splice: [[clicked.length - 1, 1]] }));\n    }\n  };\n\n  // Make blank letters and generate selectable letters on load\n  useEffect(() => {\n    makeBlankLetters(flashWord);\n    makeSelectableLetters(flashWord);\n  }, [flashWord]);\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"30px 0 30px 0\",\n        }}\n      >\n        {clickedLetters?.map((letter, index) => {\n          return (\n            <LetterDiv\n              style={{\n                backgroundColor: correct ? \"#c5ffba\" : \"\",\n                border: correct ? \"3px solid #2a5e20\" : \"\",\n                color: correct ? \"#2a5e20\" : \"\",\n              }}\n              key={index}\n            >\n              {letter}\n            </LetterDiv>\n          );\n        })}\n      </div>\n      <FlexDiv>\n        <div>\n          <Grid>\n            {selectableLetters?.map((letter, index) => {\n              return (\n                <Letters\n                  clicked={clicked}\n                  key={index}\n                  index={index}\n                  addLetter={addLetter}\n                  letter={letter}\n                  correct={correct}\n                />\n              );\n            })}\n          </Grid>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Button\n            style={{\n              pointerEvents: correct ? \"none\" : \"auto\",\n              backgroundColor: correct ? \"#C9D5F1\" : \"#e36868\",\n              boxShadow: correct ? \"3px 3px 0 #66728F\" : \"3px 3px 0 #4a0c0c\",\n              color: correct ? \"#66728F\" : \"black\",\n            }}\n            onClick={removeLetter}\n          >\n            ⌫\n          </Button>\n          {correct ? (\n            <Button\n              style={{\n                color: \"black\",\n                backgroundColor: \"#FFD80A\",\n                boxShadow: \"3px 3px 0 #F05220\",\n              }}\n              onClick={handleNextWord}\n            >\n              Next\n            </Button>\n          ) : (\n            <Button\n              style={{\n                color: \"black\",\n                backgroundColor: \"#65f06e\",\n                boxShadow: \"3px 3px 0 #0e4511\",\n                fontSize: \"3rem\",\n              }}\n              onClick={() => compareAnswer(clickedLetters)}\n            >\n              ✓\n            </Button>\n          )}\n        </div>\n      </FlexDiv>\n    </>\n  );\n}\n","/Users/douglasleinen/code/type-tigers/src/components/FlashWord/index.jsx",["104","105"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst Game = styled.div`\n  color: black;\n  background: white;\n  font-family: \"Quicksand\";\n  font-weight: bold;\n  justify-content: center;\n  padding: 0.7rem;\n  font-size: 36px;\n`;\n\nconst Div = styled.div`\n  font-size: 3rem;\n`;\n\nexport default function FlashWord({ flashWord, wordTimer, setWordTimer }) {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setWordTimer(true);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [flashWord]);\n\n  return (\n    <Game>\n      <Div style={{ visibility: !wordTimer ? \"\" : \"hidden\" }}>{flashWord}</Div>\n    </Game>\n  );\n}\n","/Users/douglasleinen/code/type-tigers/src/components/ErrorWords/index.jsx",[],"/Users/douglasleinen/code/type-tigers/src/components/Letters/index.jsx",["106","107"],"import { React, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Letter = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: \"Quicksand\";\n  font-size: 2rem;\n  padding: 0.2rem;\n  height: 75px;\n  width: 75px;\n  font-weight: bold;\n  border-radius: 10px;\n  border: none;\n  background-color: #4f83ff;\n  box-shadow: 3px 3px 0 #0f45c3;\n  margin: 0;\n`;\n\nexport default function Letters({\n  addLetter,\n  letter,\n  index,\n  clicked,\n  correct,\n}) {\n  const handleClick = (letter, index) => {\n    addLetter(letter, index);\n  };\n\n  return (\n    <>\n      <Letter\n        style={{\n          pointerEvents: clicked.includes(index) || correct ? \"none\" : \"auto\",\n          backgroundColor: clicked.includes(index) || correct ? \"#C9D5F1\" : \"\",\n          boxShadow:\n            clicked.includes(index) || correct\n              ? \"inset -3px 3px 0 #66728F\"\n              : \"\",\n          color: clicked.includes(index) || correct ? \"#66728F\" : \"\",\n        }}\n        onClick={() => handleClick(letter, index)}\n      >\n        {letter}\n      </Letter>\n    </>\n  );\n}\n","/Users/douglasleinen/code/type-tigers/src/components/Image/index.jsx",[],"/Users/douglasleinen/code/type-tigers/src/components/Sentence/index.jsx",[],"/Users/douglasleinen/code/type-tigers/src/pages/Dashboard/Dashboard.jsx",["108"],"/Users/douglasleinen/code/type-tigers/src/components/SideBar/SideBar.jsx",[],"/Users/douglasleinen/code/type-tigers/src/components/Profile/Profile.jsx",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":20,"column":10,"nodeType":"115","messageId":"116","endLine":20,"endColumn":19},{"ruleId":"113","severity":1,"message":"117","line":20,"column":21,"nodeType":"115","messageId":"116","endLine":20,"endColumn":33},{"ruleId":"109","replacedBy":"118"},{"ruleId":"111","replacedBy":"119"},{"ruleId":"113","severity":1,"message":"120","line":4,"column":7,"nodeType":"115","messageId":"116","endLine":4,"endColumn":13},{"ruleId":"121","severity":1,"message":"122","line":96,"column":3,"nodeType":"115","endLine":96,"endColumn":12,"suggestions":"123"},{"ruleId":"113","severity":1,"message":"124","line":1,"column":31,"nodeType":"115","messageId":"116","endLine":1,"endColumn":37},{"ruleId":"113","severity":1,"message":"125","line":3,"column":18,"nodeType":"115","messageId":"116","endLine":3,"endColumn":21},{"ruleId":"121","severity":1,"message":"126","line":160,"column":6,"nodeType":"127","endLine":160,"endColumn":17,"suggestions":"128"},{"ruleId":"113","severity":1,"message":"129","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"130","line":24,"column":6,"nodeType":"127","endLine":24,"endColumn":17,"suggestions":"131"},{"ruleId":"113","severity":1,"message":"129","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"125","line":2,"column":18,"nodeType":"115","messageId":"116","endLine":2,"endColumn":21},{"ruleId":"132","severity":1,"message":"133","line":62,"column":3,"nodeType":"134","messageId":"135","endLine":62,"endColumn":13},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'activeKid' is assigned a value but never used.","Identifier","unusedVar","'setActiveKid' is assigned a value but never used.",["136"],["137"],"'Button' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setFlashWord'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [testLevel] as a second argument to the useEffect Hook.",["138"],"'useRef' is defined but never used.","'css' is defined but never used.","React Hook useEffect has a missing dependency: 'makeSelectableLetters'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'setWordTimer'. Either include it or remove the dependency array. If 'setWordTimer' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["140"],"no-dupe-keys","Duplicate key 'fontFamily'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Add dependencies array: [testLevel]",{"range":"147","text":"148"},"Update the dependencies array to be: [flashWord, makeSelectableLetters]",{"range":"149","text":"150"},"Update the dependencies array to be: [flashWord, setWordTimer]",{"range":"151","text":"152"},[3268,3268],", [testLevel]",[3439,3450],"[flashWord, makeSelectableLetters]",[536,547],"[flashWord, setWordTimer]"]