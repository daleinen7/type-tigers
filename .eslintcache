[{"/Users/spideyfandan/ga/hackathon/type-tigers/src/index.js":"1","/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/App/App.jsx":"2","/Users/spideyfandan/ga/hackathon/type-tigers/src/utilities/users-service.js":"3","/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/AuthPage/AuthPage.jsx":"4","/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/Practice/Practice.jsx":"5","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/NavBar/NavBar.jsx":"6","/Users/spideyfandan/ga/hackathon/type-tigers/src/utilities/users-api.js":"7","/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/Game/index.jsx":"8","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/SignUpForm/SignUpForm.jsx":"9","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/LoginForm/LoginForm.jsx":"10","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/FlashWord/index.jsx":"11","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/UserAnswer/index.jsx":"12","/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/Dashboard/Dashboard.jsx":"13","/Users/spideyfandan/ga/hackathon/type-tigers/src/utilities/kids-api.js":"14","/Users/spideyfandan/ga/hackathon/type-tigers/src/utilities/send-request.js":"15","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/ErrorWords/index.jsx":"16","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/Letters/index.jsx":"17","/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/Home/Home.jsx":"18","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/SideBar/SideBar.jsx":"19","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/Profile/Profile.jsx":"20","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/Image/index.jsx":"21","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/Sentence/index.jsx":"22"},{"size":305,"mtime":1621279945826,"results":"23","hashOfConfig":"24"},{"size":1337,"mtime":1621453385146,"results":"25","hashOfConfig":"24"},{"size":1520,"mtime":1621279945828,"results":"26","hashOfConfig":"24"},{"size":1036,"mtime":1621399711418,"results":"27","hashOfConfig":"24"},{"size":102,"mtime":1621372349959,"results":"28","hashOfConfig":"24"},{"size":1277,"mtime":1621453385142,"results":"29","hashOfConfig":"24"},{"size":1184,"mtime":1621279945828,"results":"30","hashOfConfig":"24"},{"size":7310,"mtime":1621453385148,"results":"31","hashOfConfig":"24"},{"size":2214,"mtime":1621372349957,"results":"32","hashOfConfig":"24"},{"size":1892,"mtime":1621372349956,"results":"33","hashOfConfig":"24"},{"size":672,"mtime":1621453385139,"results":"34","hashOfConfig":"24"},{"size":5750,"mtime":1621453385144,"results":"35","hashOfConfig":"24"},{"size":3239,"mtime":1621453385147,"results":"36","hashOfConfig":"24"},{"size":495,"mtime":1621400788690,"results":"37","hashOfConfig":"24"},{"size":945,"mtime":1621400788690,"results":"38","hashOfConfig":"24"},{"size":703,"mtime":1621453385139,"results":"39","hashOfConfig":"24"},{"size":1123,"mtime":1621453385141,"results":"40","hashOfConfig":"24"},{"size":3788,"mtime":1621461023258,"results":"41","hashOfConfig":"24"},{"size":1023,"mtime":1621453385143,"results":"42","hashOfConfig":"24"},{"size":819,"mtime":1621453385142,"results":"43","hashOfConfig":"24"},{"size":355,"mtime":1621453385140,"results":"44","hashOfConfig":"24"},{"size":304,"mtime":1621453385142,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1mkxomg",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/spideyfandan/ga/hackathon/type-tigers/src/index.js",[],["96","97"],"/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/App/App.jsx",["98"],"import { useState } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { getUser } from \"../../utilities/users-service\";\nimport \"./App.css\";\nimport AuthPage from \"../AuthPage/AuthPage\";\nimport Game from \"../Game\";\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport Home from \"../Home/Home\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport styled from \"styled-components\";\nconst Main = styled.div`\n  color: black;\n  background: #fcf3e5;\n  font-family: \"Quicksand\";\n  justify-content: center;\n`;\nexport default function App() {\n  const [user, setUser] = useState(getUser());\n  const [kids, setKids] = useState([]);\n  const [activeKid, setActiveKid] = useState(kids.length ? 0 : 0);\n\n  return (\n    <Main className=\"App\">\n      {user ? (\n        <>\n          <NavBar user={user} setUser={setUser} />\n          <Switch>\n            <Route path=\"/home\">\n              <Home />\n            </Route>\n            <Route path=\"/game\">\n              <Game kids={kids} setKids={setKids} activeKid={activeKid} />\n            </Route>\n            <Route path=\"/dashboard\">\n              <Dashboard kids={kids} setKids={setKids} />\n            </Route>\n            <Redirect to=\"/dashboard\" />\n          </Switch>\n        </>\n      ) : (\n        <AuthPage setUser={setUser} />\n      )}\n    </Main>\n  );\n}\n","/Users/spideyfandan/ga/hackathon/type-tigers/src/utilities/users-service.js",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/AuthPage/AuthPage.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/Practice/Practice.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/components/NavBar/NavBar.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/utilities/users-api.js",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/Game/index.jsx",["99"],"import { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport update from \"immutability-helper\";\n\nimport FlashWord from \"../../components/FlashWord\";\nimport UserAnswer from \"../../components/UserAnswer\";\nimport ErrorWords from \"../../components/ErrorWords\";\n\nconst StyledDiv = styled.div`\n  background: #ffffff;\n  border-radius: 5px;\n`;\n\nexport default function Game() {\n  const [flashWord, setFlashWord] = useState(\"\");\n  const [errorWords, setErrorWords] = useState([]);\n  const testArr = [\"five\", \"two\", \"three\", \"four\", \"five\"];\n  const [correct, setCorrect] = useState(false);\n  const [arrCount, setArrCount] = useState(0);\n  const arrCounter = useRef(arrCount);\n  const [letterCount, setLetterCount] = useState(0);\n  const [clicked, setClicked] = useState([]);\n  const counter = useRef(letterCount);\n  const [wordTimer, setWordTimer] = useState(false);\n\n  const compareAnswer = (word) => {\n    if (flashWord.toUpperCase() === word.join(\"\")) {\n      setCorrect(true);\n    } else {\n      let error = [];\n      for (let letter in flashWord.split(\"\")) {\n        if (flashWord[letter] === word[letter].toLowerCase()) {\n          error.push([word[letter], true]);\n        } else {\n          error.push([word[letter], false]);\n        }\n      }\n      if (errorWords.length < 4) {\n        setErrorWords(update(errorWords, { $push: [error] }));\n      } else {\n        let array = [...errorWords];\n        array.shift();\n        array.push(error);\n        setErrorWords(array);\n      }\n    }\n  };\n\n  const handleNextWord = () => {\n    const newCounter = arrCount + 1;\n    setArrCount(newCounter);\n    arrCounter.current = newCounter;\n    setFlashWord(testArr[arrCounter.current]);\n    setCorrect(false);\n    setErrorWords([]);\n    setClicked([]);\n    setLetterCount(0);\n    counter.current = 0;\n    setWordTimer(false);\n  };\n\n  useEffect(() => {\n    setFlashWord(testArr[arrCounter.current]);\n  });\n\n  return (\n    <StyledDiv>\n      <h1>Spell the word you see below</h1>\n      {/* <Picture/> */}\n      <FlashWord\n        flashWord={flashWord}\n        setFlashWord={setFlashWord}\n        testArr={testArr}\n        wordTimer={wordTimer}\n        setWordTimer={setWordTimer}\n      />\n      <ErrorWords errorWords={errorWords} />\n      <UserAnswer\n        flashWord={flashWord}\n        compareAnswer={compareAnswer}\n        correct={correct}\n        handleNextWord={handleNextWord}\n        counter={counter}\n        clicked={clicked}\n        setClicked={setClicked}\n        letterCount={letterCount}\n        setLetterCount={setLetterCount}\n      />\n    </StyledDiv>\n  );\n}\n","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/SignUpForm/SignUpForm.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/components/LoginForm/LoginForm.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/components/FlashWord/index.jsx",["100","101"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nconst Game = styled.div`\n  color: black;\n  background: white;\n  font-family: 'Quicksand';\n  justify-content: center;\n  padding: .7rem;\n  font-size: 36px;\n`;\n\nexport default function FlashWord({ flashWord, wordTimer, setWordTimer }) {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setWordTimer(true);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [flashWord]);\n\n  return (\n    <Game>\n      <p style={{ visibility: !wordTimer ? \"\" : \"hidden\" }}>\n        {flashWord}\n      </p>\n    </Game>\n  );\n}\n","/Users/spideyfandan/ga/hackathon/type-tigers/src/components/UserAnswer/index.jsx",["102","103","104","105","106"],"import { useState, useEffect, useRef } from \"react\";\nimport update from \"immutability-helper\";\nimport styled, { css } from \"styled-components\";\n\nimport Letters from \"../Letters\";\n\nconst Game = styled.div`\n  background: white;\n  font-family: \"Quicksand\";\n  justify-content: center;\n  padding: 0.7rem;\n`;\nconst Button = styled.button`\n  margin: 1vmin;\n  font-family: \"Quicksand\";\n  padding: 1vmin;\n  color: var(--white);\n  background-color: #e6964b;\n  font-size: 3vmin;\n  font-weight: bold;\n  text-decoration: none;\n  text-align: center;\n  border: 0.1vmin solid var(--tan-2);\n  border-radius: 10px;\n  outline: none;\n  cursor: pointer;\n`;\nconst LetterDiv = styled.div`\n  margin: 5px;\n  background: gray;\n  color: white;\n  height: 50px;\n  width: 50px;\n  font-size: 24px;\n  justify-content: center;\n  padding: 0.7rem;\n  border-radius: 5px;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 70px);\n  grid-template-rows: 70px 70px;\n  grid-gap: 15px;\n  justify-content: center;\n  background-color: white;\n`;\n\nconst alphabet = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n];\n\nexport default function Answer({\n  compareAnswer,\n  flashWord,\n  correct,\n  handleNextWord,\n  counter,\n  clicked,\n  setClicked,\n  letterCount,\n  setLetterCount,\n}) {\n  // States and refs\n  const [clickedLetters, setClickedLetters] = useState([]);\n  const [selectableLetters, setSelectableLetter] = useState(null);\n\n  // Generating selectable letters\n  const makeSelectableLetters = (word) => {\n    let generated = word.toUpperCase().split(\"\");\n    for (let i = generated.length; i < 10; i++) {\n      generated.push(alphabet[Math.floor(Math.random() * alphabet.length)]);\n    }\n    shuffleArray(generated);\n    setSelectableLetter(generated);\n  };\n\n  // Helper function for generated selectable letters\n  const shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n\n  // Generating blank letters\n  const makeBlankLetters = (word) => {\n    let blankLetters = [];\n    for (let i = 0; i < word.length; i++) {\n      blankLetters.push(\"\");\n    }\n    setClickedLetters(blankLetters);\n  };\n\n  // Function for selecting letters into blanks\n  const addLetter = (letter, key) => {\n    if (counter.current < flashWord.length) {\n      setClickedLetters(\n        update(clickedLetters, {\n          [counter.current]: { $set: letter },\n        })\n      );\n      setClicked(update(clicked, { $push: [key] }));\n      const newCounter = letterCount + 1;\n      setLetterCount(newCounter);\n      counter.current = newCounter;\n    }\n  };\n\n  // Function for backspace\n  const removeLetter = () => {\n    if (counter.current > 0) {\n      const newCounter = letterCount - 1;\n      setLetterCount(newCounter);\n      counter.current = newCounter;\n      setClickedLetters(\n        update(clickedLetters, {\n          [counter.current]: { $set: \"\" },\n        })\n      );\n      setClicked(update(clicked, { $splice: [[clicked.length - 1, 1]] }));\n    }\n  };\n\n  // Make blank letters and generate selectable letters on load\n  useEffect(() => {\n    makeBlankLetters(flashWord);\n    makeSelectableLetters(flashWord);\n  }, [flashWord]);\n\n  return (\n    <>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        {clickedLetters?.map((letter, index) => {\n          return <LetterDiv key={index}>{letter}</LetterDiv>;\n        })}\n        {correct && <div>✓</div>}\n      </div>\n      {!correct && <button onClick={removeLetter}>Backspace</button>}\n      <Grid>\n        {selectableLetters?.map((letter, index) => {\n          return (\n            <Letters\n              clicked={clicked}\n              key={index}\n              index={index}\n              addLetter={addLetter}\n              letter={letter}\n            />\n          );\n        })}\n      </Grid>\n      {correct ? (\n        <button onClick={handleNextWord}>Next</button>\n      ) : (\n        <button onClick={() => compareAnswer(clickedLetters)}>Submit</button>\n      )}\n    </>\n  );\n}\n","/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/Dashboard/Dashboard.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/utilities/kids-api.js",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/utilities/send-request.js",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/components/ErrorWords/index.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/components/Letters/index.jsx",["107"],"import { React, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport chroma from \"chroma-js\";\n\nconst Letter = styled.button`\n  display: flex;\n  justify-content: center;\n  font-family: \"Quicksand\";\n  padding: 0.2rem;\n  ${({ color = chroma(\"#63A35B\") }) =>\n    css`\n      background-color: ${color};\n      font-size: 2rem;\n      font-weight: bold;\n      border: 2px dashed;\n      border-color: ${color};\n      border-radius: 10px;\n      background-clip: content-box;\n    `}\n`;\n\nexport default function Letters({ addLetter, letter, index, clicked }) {\n  const handleClick = (letter, index) => {\n    addLetter(letter, index);\n  };\n\n  return (\n    <>\n      <Letter\n        style={{\n          pointerEvents: clicked.includes(index) ? \"none\" : \"auto\",\n          backgroundColor: clicked.includes(index) ? \"gray\" : \"\",\n        }}\n        onClick={() => handleClick(letter, index)}\n      >\n        {letter}\n      </Letter>\n    </>\n  );\n}\n","/Users/spideyfandan/ga/hackathon/type-tigers/src/pages/Home/Home.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/components/SideBar/SideBar.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/components/Profile/Profile.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/components/Image/index.jsx",[],"/Users/spideyfandan/ga/hackathon/type-tigers/src/components/Sentence/index.jsx",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":20,"column":21,"nodeType":"114","messageId":"115","endLine":20,"endColumn":33},{"ruleId":"116","severity":1,"message":"117","line":62,"column":3,"nodeType":"114","endLine":62,"endColumn":12,"suggestions":"118"},{"ruleId":"112","severity":1,"message":"119","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"120","line":18,"column":6,"nodeType":"121","endLine":18,"endColumn":17,"suggestions":"122"},{"ruleId":"112","severity":1,"message":"123","line":1,"column":31,"nodeType":"114","messageId":"115","endLine":1,"endColumn":37},{"ruleId":"112","severity":1,"message":"124","line":3,"column":18,"nodeType":"114","messageId":"115","endLine":3,"endColumn":21},{"ruleId":"112","severity":1,"message":"125","line":7,"column":7,"nodeType":"114","messageId":"115","endLine":7,"endColumn":11},{"ruleId":"112","severity":1,"message":"126","line":13,"column":7,"nodeType":"114","messageId":"115","endLine":13,"endColumn":13},{"ruleId":"116","severity":1,"message":"127","line":154,"column":6,"nodeType":"121","endLine":154,"endColumn":17,"suggestions":"128"},{"ruleId":"112","severity":1,"message":"119","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'setActiveKid' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setFlashWord'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [testArr] as a second argument to the useEffect Hook.",["131"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'setWordTimer'. Either include it or remove the dependency array. If 'setWordTimer' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["132"],"'useRef' is defined but never used.","'css' is defined but never used.","'Game' is assigned a value but never used.","'Button' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'makeSelectableLetters'. Either include it or remove the dependency array.",["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Add dependencies array: [testArr]",{"range":"140","text":"141"},"Update the dependencies array to be: [flashWord, setWordTimer]",{"range":"142","text":"143"},"Update the dependencies array to be: [flashWord, makeSelectableLetters]",{"range":"144","text":"145"},[1930,1930],", [testArr]",[466,477],"[flashWord, setWordTimer]",[3363,3374],"[flashWord, makeSelectableLetters]"]