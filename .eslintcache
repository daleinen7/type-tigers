[{"/home/kndshein/Documents/Github Personal/type-tigers/src/index.js":"1","/home/kndshein/Documents/Github Personal/type-tigers/src/pages/App/App.jsx":"2","/home/kndshein/Documents/Github Personal/type-tigers/src/utilities/users-service.js":"3","/home/kndshein/Documents/Github Personal/type-tigers/src/pages/AuthPage/AuthPage.jsx":"4","/home/kndshein/Documents/Github Personal/type-tigers/src/pages/Dashboard/Dashboard.jsx":"5","/home/kndshein/Documents/Github Personal/type-tigers/src/components/NavBar/NavBar.jsx":"6","/home/kndshein/Documents/Github Personal/type-tigers/src/utilities/users-api.js":"7","/home/kndshein/Documents/Github Personal/type-tigers/src/pages/Game/index.jsx":"8","/home/kndshein/Documents/Github Personal/type-tigers/src/utilities/kids-api.js":"9","/home/kndshein/Documents/Github Personal/type-tigers/src/components/SignUpForm/SignUpForm.jsx":"10","/home/kndshein/Documents/Github Personal/type-tigers/src/components/LoginForm/LoginForm.jsx":"11","/home/kndshein/Documents/Github Personal/type-tigers/src/components/SideBar/SideBar.jsx":"12","/home/kndshein/Documents/Github Personal/type-tigers/src/components/Profile/Profile.jsx":"13","/home/kndshein/Documents/Github Personal/type-tigers/src/utilities/send-request.js":"14","/home/kndshein/Documents/Github Personal/type-tigers/src/components/UserAnswer/index.jsx":"15","/home/kndshein/Documents/Github Personal/type-tigers/src/components/ErrorWords/index.jsx":"16","/home/kndshein/Documents/Github Personal/type-tigers/src/components/FlashWord/index.jsx":"17","/home/kndshein/Documents/Github Personal/type-tigers/src/components/Image/index.jsx":"18","/home/kndshein/Documents/Github Personal/type-tigers/src/components/Sentence/index.jsx":"19","/home/kndshein/Documents/Github Personal/type-tigers/src/components/Letters/index.jsx":"20"},{"size":305,"mtime":1621269820072,"results":"21","hashOfConfig":"22"},{"size":1184,"mtime":1621449382718,"results":"23","hashOfConfig":"22"},{"size":1520,"mtime":1621269820072,"results":"24","hashOfConfig":"22"},{"size":1036,"mtime":1621373024840,"results":"25","hashOfConfig":"22"},{"size":3239,"mtime":1621440275259,"results":"26","hashOfConfig":"22"},{"size":1567,"mtime":1621440275259,"results":"27","hashOfConfig":"22"},{"size":1184,"mtime":1621269820072,"results":"28","hashOfConfig":"22"},{"size":4152,"mtime":1621449382718,"results":"29","hashOfConfig":"22"},{"size":495,"mtime":1621373024840,"results":"30","hashOfConfig":"22"},{"size":2214,"mtime":1621373024840,"results":"31","hashOfConfig":"22"},{"size":1892,"mtime":1621373024840,"results":"32","hashOfConfig":"22"},{"size":1032,"mtime":1621435999338,"results":"33","hashOfConfig":"22"},{"size":819,"mtime":1621435999338,"results":"34","hashOfConfig":"22"},{"size":945,"mtime":1621373024840,"results":"35","hashOfConfig":"22"},{"size":5750,"mtime":1621443756173,"results":"36","hashOfConfig":"22"},{"size":703,"mtime":1621395262652,"results":"37","hashOfConfig":"22"},{"size":672,"mtime":1621395262652,"results":"38","hashOfConfig":"22"},{"size":165,"mtime":1621449382718,"results":"39","hashOfConfig":"22"},{"size":304,"mtime":1621395262652,"results":"40","hashOfConfig":"22"},{"size":1123,"mtime":1621395262652,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1wqti7k",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},"/home/kndshein/Documents/Github Personal/type-tigers/src/index.js",[],["89","90"],"/home/kndshein/Documents/Github Personal/type-tigers/src/pages/App/App.jsx",["91","92"],"/home/kndshein/Documents/Github Personal/type-tigers/src/utilities/users-service.js",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/pages/AuthPage/AuthPage.jsx",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/pages/Dashboard/Dashboard.jsx",["93","94"],"import SideBar from '../../components/SideBar/SideBar';\nimport Profile from '../../components/Profile/Profile';\nimport {Link} from 'react-router-dom';\nimport {useEffect, useState} from 'react';\nimport bear from '../../images/bear.svg';\nimport * as kidApi from '../../utilities/kids-api';\nimport styled from 'styled-components';\n\nconst StyledDiv = styled.div`\n  display: flex;\n`;\n\nconst DashboardSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n\n  ul {\n    padding: 0;\n    width: 100%;\n    list-style-type: none;\n  }\n  \n  .play {\n    display: flex;\n    justify-content: space-evenly;  \n    align-items: center;\n    border-bottom: 1px solid #FFD600;\n    padding-bottom: 40px;\n    width: 97%;\n  }\n\n  button {\n    width: 270px;\n    font-family: Quicksand;\n    font-style: normal;\n    font-weight: bold;\n    font-size: 2.25rem;\n    text-align: center;\n    font-family: \"Quicksand\";\n    border-radius: 10px;\n    border: none;\n    background-color: #4f83ff;\n    box-shadow: 3px 3px 0 #0f45c3;\n    margin: 0;\n  }\n\n  h1 {\n    text-align: center;\n  }\n`\n\nconst linkStyle = {\n  color: 'white',\n  padding: '20px 60px', \n  fontFamily: 'Quicksand',\n  fontStyle: 'normal',\n  fontWeight: 'bold',\n  fontSize: '2.25rem',\n  textAlign: 'center',\n  fontFamily: \"'Quicksand'\",\n  borderRadius: '10px',\n  border: 'none',\n  backgroundColor: '#4f83ff',\n  boxShadow: '3px 3px 0 #0f45c3',\n  margin: '0',\n  textDecoration: 'none'\n}\n\nexport default function Dashboard({kids, setKids}) {\n\n  const[formData, setFormData] = useState({name: '', level: 0});\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    kidApi.create(formData);\n  }\n\n  function handleChange(evt) {\n    setFormData({ ...formData, [evt.target.name]: evt.target.value });\n  }\n\n  useEffect(() => {\n    getKids();\n  }, []);\n  \n  async function getKids() {\n    const allKids = await kidApi.getAll();\n    setKids(allKids);\n  }\n\n  return (\n    <StyledDiv>\n      <SideBar/>\n      <DashboardSection>\n        <h1>Your Dashboard</h1>\n        <div className=\"play\">\n          <img src={bear} alt=\"bear\" />\n          <Link to='/game' style={linkStyle}>Let's Play</Link>\n        </div>\n\n        <ul>\n          {kids.map(kid => {\n            return (\n              <Profile name={kid.name} coins={kid.coins} level={kid.level} key={kid._id}/>\n          )})}\n        </ul>\n\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\n          <div>\n            <label>Name</label>\n            <input onChange={handleChange} name=\"name\" value={formData.name} placeholder=\"(required)\" minLength=\"1\" required />\n          </div>\n          <div>\n            <label>Level</label>\n            <select name=\"level\" onChange={handleChange}>\n              <option value={0}>Level Zero</option>\n              <option value={1}>Level One</option>\n              <option value={2}>Level Two</option>\n            </select>\n          </div>\n          <button type=\"submit\">ADD</button>\n        </form>\n        </DashboardSection>\n    </StyledDiv>\n  );\n}","/home/kndshein/Documents/Github Personal/type-tigers/src/components/NavBar/NavBar.jsx",["95"],"import { Link, NavLink } from \"react-router-dom\";\nimport * as userService from \"../../utilities/users-service\";\nimport styled from \"styled-components\";\nconst Button = styled.button`\n  margin: 1vmin;\n  font-family: \"Quicksand\";\n  padding: 1vmin;\n  color: var(--white);\n  background-color: #7566e5;\n  font-size: 3vmin;\n  font-weight: bold;\n  text-decoration: none;\n  text-align: center;\n  border: 0.1vmin solid var(--tan-2);\n  border-radius: 10px;\n  outline: none;\n  cursor: pointer;\n`;\nconst Nav = styled.div`\n  font-family: \"Quicksand\";\n  color: white;\n  background-color: #3370ff;\n`;\nexport default function NavBar({ user, setUser }) {\n  function handleLogOut() {\n    userService.logOut();\n    setUser(null);\n  }\n\n  return (\n    <Nav>\n      <div>Type Tigers</div>\n      <NavLink exact activeStyle={{ backgroundColor: \"yellow\" }} to=\"/game\">\n        Game\n      </NavLink>\n      &nbsp; | &nbsp;\n      <NavLink exact activeStyle={{ backgroundColor: \"yellow\" }} to=\"/account\">\n        Account\n      </NavLink>\n      &nbsp; | &nbsp;\n      <span>Welcome, {user.name}</span>\n      &nbsp;&nbsp;\n      <Link to=\"\" onClick={handleLogOut}>\n        Log Out\n      </Link>\n    </Nav>\n  );\n}\n","/home/kndshein/Documents/Github Personal/type-tigers/src/utilities/users-api.js",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/pages/Game/index.jsx",["96","97"],"import { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport update from \"immutability-helper\";\n\nimport FlashWord from \"../../components/FlashWord\";\nimport UserAnswer from \"../../components/UserAnswer\";\nimport ErrorWords from \"../../components/ErrorWords\";\nimport Image from \"../../components/Image\";\nimport Sentence from \"../../components/Sentence\";\n\nconst StyledDiv = styled.div`\n  background: #ffffff;\n  border-radius: 5px;\n`;\n\nexport default function Game() {\n  const [flashWord, setFlashWord] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [sentence, setSentence] = useState(\"\");\n  const [errorWords, setErrorWords] = useState([]);\n  const testArr = [\"five\", \"two\", \"three\"];\n  const testLevel = [\n    {\n      word: \"Small\",\n      sentence: \"Brian the Bunny is very small in size and hard to find!\",\n      image: \"https://nerdist.com/wp-content/uploads/2020/07/maxresdefault.jpg\",\n    },\n    {\n      word: \"Long\",\n      sentence: \"Brian the bunny has very long, fluffy ears.\",\n      image: \"https://nerdist.com/wp-content/uploads/2020/07/maxresdefault.jpg\",\n    },\n    {\n      word: \"Warm\",\n      sentence: \"He likes warm places and went to the desert.\",\n      image: \"https://nerdist.com/wp-content/uploads/2020/07/maxresdefault.jpg\",\n    },\n    {\n      word: null,\n      sentence:\n        \"After finding the clues, Mr. Bear went to the desert to find Mr. Pickles\",\n      image: \"https://nerdist.com/wp-content/uploads/2020/07/maxresdefault.jpg\",\n    },\n    {\n      word: \"Warm\",\n      sentence: \"He likes warm places and went to the desert.\",\n      image: \"https://nerdist.com/wp-content/uploads/2020/07/maxresdefault.jpg\",\n    },\n  ];\n  const [correct, setCorrect] = useState(false);\n  const [arrCount, setArrCount] = useState(0);\n  const arrCounter = useRef(arrCount);\n  const [letterCount, setLetterCount] = useState(0);\n  const [clicked, setClicked] = useState([]);\n  const counter = useRef(letterCount);\n  const [wordTimer, setWordTimer] = useState(false);\n\n  const compareAnswer = (word) => {\n    if (flashWord.toUpperCase() === word.join(\"\")) {\n      setCorrect(true);\n    } else {\n      let error = [];\n      for (let letter in flashWord.split(\"\")) {\n        if (flashWord[letter].toLowerCase() === word[letter].toLowerCase()) {\n          error.push([word[letter], true]);\n        } else {\n          error.push([word[letter], false]);\n        }\n      }\n      if (errorWords.length < 4) {\n        setErrorWords(update(errorWords, { $push: [error] }));\n      } else {\n        let array = [...errorWords];\n        array.shift();\n        array.push(error);\n        setErrorWords(array);\n      }\n    }\n  };\n\n  const handleNextWord = () => {\n    if (arrCounter.current < testLevel.length - 1) {\n      const newCounter = arrCount + 1;\n      setArrCount(newCounter);\n      arrCounter.current = newCounter;\n      setFlashWord(testArr[arrCounter.current]);\n      setCorrect(false);\n      setErrorWords([]);\n      setClicked([]);\n      setLetterCount(0);\n      counter.current = 0;\n      setWordTimer(false);\n    }\n  };\n\n  useEffect(() => {\n    setFlashWord(testLevel[arrCounter.current].word);\n    setImage(testLevel[arrCounter.current].image);\n    setSentence(testLevel[arrCounter.current].sentence);\n  });\n\n  return (\n    <StyledDiv>\n      <Image image={image} />\n      <FlashWord\n        flashWord={flashWord}\n        setFlashWord={setFlashWord}\n        testArr={testArr}\n        wordTimer={wordTimer}\n        setWordTimer={setWordTimer}\n      />\n      <Sentence sentence={sentence} />\n      <div style={{ content: \"\", height: \"20px\", marginBottom: \"40px\" }}>\n        <ErrorWords errorWords={errorWords} />\n      </div>\n      {flashWord ? (\n        <UserAnswer\n          flashWord={flashWord}\n          compareAnswer={compareAnswer}\n          correct={correct}\n          handleNextWord={handleNextWord}\n          counter={counter}\n          clicked={clicked}\n          setClicked={setClicked}\n          letterCount={letterCount}\n          setLetterCount={setLetterCount}\n        />\n      ) : (\n        <button onClick={handleNextWord}>Continue</button>\n      )}\n    </StyledDiv>\n  );\n}\n","/home/kndshein/Documents/Github Personal/type-tigers/src/utilities/kids-api.js",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/components/SignUpForm/SignUpForm.jsx",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/components/LoginForm/LoginForm.jsx",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/components/SideBar/SideBar.jsx",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/components/Profile/Profile.jsx",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/utilities/send-request.js",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/components/UserAnswer/index.jsx",["98","99","100"],"import { useState, useEffect, useRef } from \"react\";\nimport update from \"immutability-helper\";\nimport styled, { css } from \"styled-components\";\n\nimport Letters from \"../Letters\";\n\nconst LetterDiv = styled.div`\n  display: flex;\n  justify-self: center;\n  align-items: center;\n  margin: 5px 10px 5px 10px;\n  border: 3px solid #4f83ff;\n  color: #4f83ff;\n  height: 75px;\n  width: 75px;\n  font-size: 50px;\n  justify-content: center;\n  padding: 0.7rem;\n  border-radius: 10px;\n`;\n\nconst Grid = styled.div`\n  // display: grid;\n  // grid-template-columns: repeat(5, 80px);\n  // grid-template-rows: 80px 80px;\n  // grid-gap: 15px;\n  display: flex;\n  flex-flow: row wrap;\n  gap: 15px;\n  justify-content: space-between;\n  background-color: white;\n`;\n\nconst alphabet = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n];\n\nconst FlexDiv = styled.div`\n  margin: 0 auto;\n  width: 700px;\n  display: grid;\n  grid-template-columns: 500px 200px;\n  gap: 30px;\n`;\n\nconst Button = styled.button`\n  font-size: 1.5rem;\n  color: white;\n  border: none;\n  background-color: #4f83ff;\n  box-shadow: 3px 3px 0 #0f45c3;\n  height: 75px;\n  width: 150px;\n  padding: 0.5rem;\n  margin: 0;\n  border-radius: 10px;\n`;\n\nexport default function Answer({\n  compareAnswer,\n  flashWord,\n  correct,\n  handleNextWord,\n  counter,\n  clicked,\n  setClicked,\n  letterCount,\n  setLetterCount,\n}) {\n  // States and refs\n  const [clickedLetters, setClickedLetters] = useState([]);\n  const [selectableLetters, setSelectableLetter] = useState(null);\n\n  // Generating selectable letters\n  const makeSelectableLetters = (word) => {\n    let generated = word.toUpperCase().split(\"\");\n    for (let i = generated.length; i < 10; i++) {\n      generated.push(alphabet[Math.floor(Math.random() * alphabet.length)]);\n    }\n    shuffleArray(generated);\n    setSelectableLetter(generated);\n  };\n\n  // Helper function for generated selectable letters\n  const shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n\n  // Generating blank letters\n  const makeBlankLetters = (word) => {\n    let blankLetters = [];\n    for (let i = 0; i < word.length; i++) {\n      blankLetters.push(\"\");\n    }\n    setClickedLetters(blankLetters);\n  };\n\n  // Function for selecting letters into blanks\n  const addLetter = (letter, key) => {\n    if (counter.current < flashWord.length) {\n      setClickedLetters(\n        update(clickedLetters, {\n          [counter.current]: { $set: letter },\n        })\n      );\n      setClicked(update(clicked, { $push: [key] }));\n      const newCounter = letterCount + 1;\n      setLetterCount(newCounter);\n      counter.current = newCounter;\n    }\n  };\n\n  // Function for backspace\n  const removeLetter = () => {\n    if (counter.current > 0) {\n      const newCounter = letterCount - 1;\n      setLetterCount(newCounter);\n      counter.current = newCounter;\n      setClickedLetters(\n        update(clickedLetters, {\n          [counter.current]: { $set: \"\" },\n        })\n      );\n      setClicked(update(clicked, { $splice: [[clicked.length - 1, 1]] }));\n    }\n  };\n\n  // Make blank letters and generate selectable letters on load\n  useEffect(() => {\n    makeBlankLetters(flashWord);\n    makeSelectableLetters(flashWord);\n  }, [flashWord]);\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: \"30px 0 30px 0\",\n        }}\n      >\n        {clickedLetters?.map((letter, index) => {\n          return (\n            <LetterDiv\n              style={{\n                backgroundColor: correct ? \"#c5ffba\" : \"\",\n                border: correct ? \"3px solid #2a5e20\" : \"\",\n                color: correct ? \"#2a5e20\" : \"\",\n              }}\n              key={index}\n            >\n              {letter}\n            </LetterDiv>\n          );\n        })}\n      </div>\n      <FlexDiv>\n        <div>\n          <Grid>\n            {selectableLetters?.map((letter, index) => {\n              return (\n                <Letters\n                  clicked={clicked}\n                  key={index}\n                  index={index}\n                  addLetter={addLetter}\n                  letter={letter}\n                  correct={correct}\n                />\n              );\n            })}\n          </Grid>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Button\n            style={{\n              pointerEvents: correct ? \"none\" : \"auto\",\n              backgroundColor: correct ? \"#C9D5F1\" : \"#e36868\",\n              boxShadow: correct ? \"3px 3px 0 #66728F\" : \"3px 3px 0 #4a0c0c\",\n              color: correct ? \"#66728F\" : \"black\",\n            }}\n            onClick={removeLetter}\n          >\n            ⌫\n          </Button>\n          {correct ? (\n            <Button\n              style={{\n                color: \"black\",\n                backgroundColor: \"#FFD80A\",\n                boxShadow: \"3px 3px 0 #F05220\",\n              }}\n              onClick={handleNextWord}\n            >\n              Next\n            </Button>\n          ) : (\n            <Button\n              style={{\n                color: \"black\",\n                backgroundColor: \"#65f06e\",\n                boxShadow: \"3px 3px 0 #0e4511\",\n                fontSize: \"3rem\",\n              }}\n              onClick={() => compareAnswer(clickedLetters)}\n            >\n              ✓\n            </Button>\n          )}\n        </div>\n      </FlexDiv>\n    </>\n  );\n}\n","/home/kndshein/Documents/Github Personal/type-tigers/src/components/ErrorWords/index.jsx",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/components/FlashWord/index.jsx",["101","102"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst Game = styled.div`\n  color: black;\n  background: white;\n  font-family: \"Quicksand\";\n  font-weight: bold;\n  justify-content: center;\n  padding: 0.7rem;\n  font-size: 36px;\n`;\n\nconst Div = styled.div`\n  font-size: 3rem;\n`;\n\nexport default function FlashWord({ flashWord, wordTimer, setWordTimer }) {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setWordTimer(true);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [flashWord]);\n\n  return (\n    <Game>\n      <Div style={{ visibility: !wordTimer ? \"\" : \"hidden\" }}>{flashWord}</Div>\n    </Game>\n  );\n}\n","/home/kndshein/Documents/Github Personal/type-tigers/src/components/Image/index.jsx",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/components/Sentence/index.jsx",[],"/home/kndshein/Documents/Github Personal/type-tigers/src/components/Letters/index.jsx",["103","104"],"import { React, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Letter = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: \"Quicksand\";\n  font-size: 2rem;\n  padding: 0.2rem;\n  height: 75px;\n  width: 75px;\n  font-weight: bold;\n  border-radius: 10px;\n  border: none;\n  background-color: #4f83ff;\n  box-shadow: 3px 3px 0 #0f45c3;\n  margin: 0;\n`;\n\nexport default function Letters({\n  addLetter,\n  letter,\n  index,\n  clicked,\n  correct,\n}) {\n  const handleClick = (letter, index) => {\n    addLetter(letter, index);\n  };\n\n  return (\n    <>\n      <Letter\n        style={{\n          pointerEvents: clicked.includes(index) || correct ? \"none\" : \"auto\",\n          backgroundColor: clicked.includes(index) || correct ? \"#C9D5F1\" : \"\",\n          boxShadow:\n            clicked.includes(index) || correct\n              ? \"inset -3px 3px 0 #66728F\"\n              : \"\",\n          color: clicked.includes(index) || correct ? \"#66728F\" : \"\",\n        }}\n        onClick={() => handleClick(letter, index)}\n      >\n        {letter}\n      </Letter>\n    </>\n  );\n}\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":19,"column":10,"nodeType":"111","messageId":"112","endLine":19,"endColumn":19},{"ruleId":"109","severity":1,"message":"113","line":19,"column":21,"nodeType":"111","messageId":"112","endLine":19,"endColumn":33},{"ruleId":"114","severity":1,"message":"115","line":62,"column":3,"nodeType":"116","messageId":"117","endLine":62,"endColumn":13},{"ruleId":"118","severity":1,"message":"119","line":86,"column":6,"nodeType":"120","endLine":86,"endColumn":8,"suggestions":"121"},{"ruleId":"109","severity":1,"message":"122","line":4,"column":7,"nodeType":"111","messageId":"112","endLine":4,"endColumn":13},{"ruleId":"118","severity":1,"message":"123","line":191,"column":3,"nodeType":"111","endLine":191,"endColumn":12,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":249,"column":9,"nodeType":"127","endLine":252,"endColumn":11},{"ruleId":"109","severity":1,"message":"128","line":1,"column":31,"nodeType":"111","messageId":"112","endLine":1,"endColumn":37},{"ruleId":"109","severity":1,"message":"129","line":3,"column":18,"nodeType":"111","messageId":"112","endLine":3,"endColumn":21},{"ruleId":"118","severity":1,"message":"130","line":160,"column":6,"nodeType":"120","endLine":160,"endColumn":17,"suggestions":"131"},{"ruleId":"109","severity":1,"message":"132","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"133","line":24,"column":6,"nodeType":"120","endLine":24,"endColumn":17,"suggestions":"134"},{"ruleId":"109","severity":1,"message":"132","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"129","line":2,"column":18,"nodeType":"111","messageId":"112","endLine":2,"endColumn":21},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'activeKid' is assigned a value but never used.","Identifier","unusedVar","'setActiveKid' is assigned a value but never used.","no-dupe-keys","Duplicate key 'fontFamily'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getKids'. Either include it or remove the dependency array.","ArrayExpression",["137"],"'Button' is assigned a value but never used.","React Hook useEffect contains a call to 'setFlashWord'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [testLevel] as a second argument to the useEffect Hook.",["138"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'css' is defined but never used.","React Hook useEffect has a missing dependency: 'makeSelectableLetters'. Either include it or remove the dependency array.",["139"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'setWordTimer'. Either include it or remove the dependency array. If 'setWordTimer' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [getKids]",{"range":"149","text":"150"},"Add dependencies array: [testLevel]",{"range":"151","text":"152"},"Update the dependencies array to be: [flashWord, makeSelectableLetters]",{"range":"153","text":"154"},"Update the dependencies array to be: [flashWord, setWordTimer]",{"range":"155","text":"156"},[1815,1817],"[getKids]",[5696,5696],", [testLevel]",[3439,3450],"[flashWord, makeSelectableLetters]",[536,547],"[flashWord, setWordTimer]"]